---
// Componente solo para el fondo animado, sin contenido
---

<div class="background-paths-container">
  <div class="floating-paths">
    <svg class="w-full h-full" viewBox="0 0 696 316" fill="none">
      <title>Background Paths</title>
      {Array.from({ length: 36 }, (_, i) => {
        const position = 1;
        const d = `M-${380 - i * 5 * position} -${189 + i * 6}C-${
          380 - i * 5 * position
        } -${189 + i * 6} -${312 - i * 5 * position} ${216 - i * 6} ${
          152 - i * 5 * position
        } ${343 - i * 6}C${616 - i * 5 * position} ${470 - i * 6} ${
          684 - i * 5 * position
        } ${875 - i * 6} ${684 - i * 5 * position} ${875 - i * 6}`;
        const width = 0.5 + i * 0.03;
        const opacity = 0.1 + i * 0.03;
        
        return (
          <path
            key={i}
            d={d}
            stroke="currentColor"
            stroke-width={width}
            stroke-opacity={opacity}
            class="floating-path"
            style={`--delay: ${i * 0.1}s; --duration: ${20 + Math.random() * 10}s;`}
          />
        );
      })}
    </svg>
  </div>
  
  <div class="floating-paths reverse">
    <svg class="w-full h-full" viewBox="0 0 696 316" fill="none">
      <title>Background Paths</title>
      {Array.from({ length: 36 }, (_, i) => {
        const position = -1;
        const d = `M-${380 - i * 5 * position} -${189 + i * 6}C-${
          380 - i * 5 * position
        } -${189 + i * 6} -${312 - i * 5 * position} ${216 - i * 6} ${
          152 - i * 5 * position
        } ${343 - i * 6}C${616 - i * 5 * position} ${470 - i * 6} ${
          684 - i * 5 * position
        } ${875 - i * 6} ${684 - i * 5 * position} ${875 - i * 6}`;
        const width = 0.5 + i * 0.03;
        const opacity = 0.1 + i * 0.03;
        
        return (
          <path
            key={i}
            d={d}
            stroke="currentColor"
            stroke-width={width}
            stroke-opacity={opacity}
            class="floating-path"
            style={`--delay: ${i * 0.1}s; --duration: ${20 + Math.random() * 10}s;`}
          />
        );
      })}
    </svg>
  </div>
</div>

<style>
  .background-paths-container {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: 1;
  }

  .floating-paths {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
  }

  .floating-paths.reverse {
    animation: reverse 40s linear infinite;
  }

  .floating-path {
    stroke: rgba(255, 255, 255, 0.1);
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: drawPath var(--duration, 20s) linear infinite;
    animation-delay: var(--delay, 0s);
    will-change: stroke-dashoffset, opacity;
  }

  @keyframes drawPath {
    0% {
      stroke-dashoffset: 1000;
      opacity: 0.1;
    }
    25% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.6;
    }
    75% {
      opacity: 0.3;
    }
    100% {
      stroke-dashoffset: 0;
      opacity: 0.1;
    }
  }

  @keyframes reverse {
    0% { transform: scaleX(1); }
    100% { transform: scaleX(-1); }
  }

  @media (prefers-reduced-motion: reduce) {
    .floating-path {
      animation: none;
    }
    
    .floating-paths.reverse {
      animation: none;
    }
  }
</style>
